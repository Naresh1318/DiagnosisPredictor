import icd9

assert(icd9.decimal_to_short("1.0") == "0010")
assert(icd9.decimal_to_short("1") == "001")
assert(icd9.decimal_to_short("22") == "022")
assert(icd9.decimal_to_short("345") == "345")
assert(icd9.decimal_to_short("1") == "001")
assert(icd9.decimal_to_short("1.1") == "0011")
assert(icd9.decimal_to_short("1.23") == "00123")
assert(icd9.decimal_to_short("81") == "081")
assert(icd9.decimal_to_short("81.1") == "0811")
assert(icd9.decimal_to_short("81.23") == "08123")
assert(icd9.decimal_to_short("991") == "991")
assert(icd9.decimal_to_short("991.1") == "9911")
assert(icd9.decimal_to_short("991.23") == "99123")

assert(all([x == y for x, y in zip(icd9.decimal_to_parts("0"), ("000", ""))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("000"), ("000", ""))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("V1.2"), ("V01", "2"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("1.1"), ("001", "1"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("001.1"), ("001", "1"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("22.22"), ("022", "22"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("022.22"), ("022", "22"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("333.3"), ("333", "3"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("444"), ("444", ""))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("9.9"), ("009", "9"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("88.88"), ("088", "88"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("777.6"), ("777", "6"))]))
assert(all([x == y for x, y in zip(icd9.decimal_to_parts("009.9"), ("009", "9"))]))

assert(icd9.short_to_decimal("0010") == "1.0")
assert(icd9.short_to_decimal("001") == "1")
assert(icd9.short_to_decimal("022") == "22")
assert(icd9.short_to_decimal("345") == "345")
assert(icd9.short_to_decimal("001") == "1")
assert(icd9.short_to_decimal("0011") == "1.1")
assert(icd9.short_to_decimal("00123") == "1.23")
assert(icd9.short_to_decimal("081") == "81")
assert(icd9.short_to_decimal("0811") == "81.1")
assert(icd9.short_to_decimal("08123") == "81.23")
assert(icd9.short_to_decimal("991") == "991")
assert(icd9.short_to_decimal("9911") == "991.1")
assert(icd9.short_to_decimal("99123") == "991.23")
assert(icd9.short_to_decimal("V013") == "V01.3")

assert(all([x == y for x, y in zip(icd9.short_to_parts("E000"), ("E000", ""))]))
assert(all([x == y for x, y in zip(icd9.short_to_parts("E00"), ("E000", ""))]))
assert(all([x == y for x, y in zip(icd9.short_to_parts("E0"), ("E000", ""))]))
assert(all([x == y for x, y in zip(icd9.short_to_parts("E1"), ("E001", ""))]))
assert(all([x == y for x, y in zip(icd9.short_to_parts("E001"), ("E001", ""))]))
assert(all([x == y for x, y in zip(icd9.short_to_parts("E0123"), ("E012", "3"))]))
assert(all([x == y for x, y in zip(icd9.short_to_parts("E100"), ("E100", ""))]))
assert(all([x == y for x, y in zip(icd9.short_to_parts("E1234"), ("E123", "4"))]))

assert(all([x == y for x, y in zip(icd9.parts_to_decimal("000", ""), ("0"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("V01", "2"), ("V1.2"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("001", "1"), ("1.1"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("022", "22"), ("22.22"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("333", "3"), ("333.3"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("444", ""), ("444"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("009", "9"), ("9.9"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("088", "88"), ("88.88"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("777", "6"), ("777.6"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_decimal("009", "9"), ("9.9"))]))

assert(all([x == y for x, y in zip(icd9.parts_to_short("E000", ""), ("E000"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("E00", ""), ("E000"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("E0", ""), ("E000"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("E001", ""), ("E001"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("E01", ""), ("E001"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("E1", ""), ("E001"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("E012", "3"), ("E0123"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("E100", ""), ("E100"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("E123", "4"), ("E1234"))]))

assert(all([x == y for x, y in zip(icd9.parts_to_short("V1", "0"), ("V010"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("V1", "1"), ("V011"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("V01", "0"), ("V010"))]))
assert(all([x == y for x, y in zip(icd9.parts_to_short("V01", "1"), ("V011"))]))
